spring:
  config:
    import: optional:file:.env[.properties]
  # 데이터베이스 설정
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  main:
    allow-bean-definition-overriding: true

  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      region:
        static: ${AWS_REGION}
      s3:
        bucket: ${AWS_BUCKET}

  # JPA 설정
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    open-in-view: false

  # 파일 업로드 설정
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

# JWT 설정
jwt:
  secret:
    key: ${JWT_SECRET_KEY}
  access:
    expiration: ${JWT_ACCESS_EXPIRATION}
  refresh:
    expiration: ${JWT_REFRESH_EXPIRATION}

  # 로깅 설정
logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace
    org.springframework.security: DEBUG
    com.nfjs.fooddelivery: DEBUG
    org.springframework.web: DEBUG
    org.springframework.core.env: DEBUG
    org.postgresql: DEBUG

# 서버 설정
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

ai:
  url: "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent"
  key: "AIzaSyBqnFwQyquTwKJ6wNTQeceM2EZ-yD8Gy-c"